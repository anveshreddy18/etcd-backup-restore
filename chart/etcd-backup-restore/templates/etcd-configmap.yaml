---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-etcd-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: etcd
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  etcd.conf.yaml: |-
    # Human-readable name for this member.
    name: {{ .Release.Name }}-etcd

    # Path to the data directory.
    data-dir: /var/etcd/data/new.etcd

    # metrics configuration
    metrics: basic

    # Number of committed transactions to trigger a snapshot to disk.
    snapshot-count: 75000

    # Raise alarms when backend size exceeds the given quota. 0 means use the
    # default quota.
    {{- if .Values.backup.etcdQuotaBytes }}
    quota-backend-bytes: {{ int $.Values.backup.etcdQuotaBytes }}
    {{- end }}

    # List of comma separated URLs to listen on for client traffic.
    listen-client-urls: {{ if .Values.etcdTLS }}https{{ else }}http{{ end }}://0.0.0.0:{{ .Values.servicePorts.client }}

    # List of this member's client URLs to advertise to the public.
    # The URLs needed to be a comma-separated list.
    advertise-client-urls: {{ if .Values.etcdTLS }}https{{ else }}http{{ end }}://0.0.0.0:{{ .Values.servicePorts.client }}

    # Initial cluster token for the etcd cluster during bootstrap.
    initial-cluster-token: 'new'

    # Initial cluster state ('new' or 'existing').
    initial-cluster-state: 'new'

    {{- if .Values.autoCompaction }}
    # auto-compaction-mode ("periodic" or "revision").
    {{- if .Values.autoCompaction.mode }}
    auto-compaction-mode: {{ .Values.autoCompaction.mode }}
    {{- end }}

    # auto-compaction-retention defines Auto compaction retention length for etcd.
    {{- if .Values.autoCompaction.retentionLength }}
    auto-compaction-retention: {{ .Values.autoCompaction.retentionLength }}
    {{- end }}
    {{- end }}

{{- if .Values.etcdTLS }}
    client-transport-security:
      # Path to the client server TLS cert file.
      cert-file: /var/etcd/ssl/tls/tls.crt

      # Path to the client server TLS key file.
      key-file: /var/etcd/ssl/tls/tls.key

      # Enable client cert authentication.
      client-cert-auth: true

      # Path to the client server TLS trusted CA cert file.
      trusted-ca-file: /var/etcd/ssl/ca/ca.crt
{{- end }}
